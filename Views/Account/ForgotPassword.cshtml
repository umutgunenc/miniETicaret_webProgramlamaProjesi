@model miniETicaret.Models.ViewModel.Account.ForgotPasswordViewModel

<div class="container mt-4">
	<h2 class="text-center">Şifremi Unuttum</h2>
	<!-- Dinamik Mesaj Kutusu -->
	<div id="messageBox" class="alert d-none" role="alert"></div>

	<!-- Şifre Sıfırlama Formu -->
	<form id="forgotPasswordForm" asp-action="ForgotPassword" method="post">
		<div class="mb-3">
			<label for="email" class="form-label">E-Posta Adresiniz</label>
			<input type="email" name="Email" id="email" class="form-control" required placeholder="E-posta adresinizi girin" />
			<span asp-validation-for="Email" class="text-danger"></span>
		</div>
		<button type="submit" class="btn btn-primary">Şifre Sıfırlama Linki Gönder</button>
	</form>

	<!-- Şifre sıfırlama bağlantısı gösterilecek alan -->
	<div id="resetLinkContainer" class="mt-4 d-none">
		<div class="alert alert-info">
			<p>Şifre sıfırlama bağlantınız oluşturuldu:</p>
			<input type="text" class="form-control" id="resetLink" readonly />
			<button class="btn btn-primary mt-2" onclick="copyResetLink()">Bağlantıyı Kopyala</button>
		</div>
	</div>

</div>

@section scripts {
	<script>
		document.addEventListener("DOMContentLoaded", function () {
			const form = document.getElementById("forgotPasswordForm");
			const resetLinkContainer = document.getElementById("resetLinkContainer");
			const resetLinkInput = document.getElementById("resetLink");

			form.addEventListener("submit", function (e) {
				e.preventDefault(); // Sayfa yenilemeyi engelle

				const formData = new FormData(form);

				fetch("/Account/ForgotPassword", {
					method: "POST",
					body: formData,
					headers: {
						"Accept": "application/json"
					}
				})
					.then(response => {
						if (!response.ok) {
							throw new Error(`Sunucu hatası: ${response.status}`);
						}
						return response.json();
					})
					.then(data => {
						if (data.success) {
							resetLinkContainer.classList.remove("d-none");
							resetLinkInput.value = data.message; // Şifre sıfırlama bağlantısını göster
						} else {
							alert(data.message); // Başarısız mesajları için uyarı
						}
					})
					.catch(error => {
						console.error("Hata:", error);
						alert("Bir hata oluştu. Lütfen tekrar deneyin.");
					});
			});

			// Bağlantıyı kopyalama fonksiyonu
			window.copyResetLink = function () {
				resetLinkInput.select();
				resetLinkInput.setSelectionRange(0, 99999); // Mobil uyumluluk
				document.execCommand("copy");
				alert("Bağlantı kopyalandı!");
			};
		});
	</script>

}
